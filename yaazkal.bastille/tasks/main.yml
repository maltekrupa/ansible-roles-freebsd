---
- name: Install
  community.general.pkgng:
    name: bastille git-lite
    state: present
    cached: "{{ bastille_pkg_cached }}"

- name: Configuration
  ansible.builtin.template:
    src: usr/local/etc/bastille/bastille.conf.j2
    dest: /usr/local/etc/bastille/bastille.conf

- name: Enable service
  community.general.sysrc:
    name: bastille_enable
    value: "YES"

- name: Setup cloned interfaces
  community.general.sysrc:
    name: cloned_interfaces
    value: lo1

- name: Setup lo1 interface name
  community.general.sysrc:
    name: ifconfig_lo1_name
    value: bastille0

- name: Start cloned interface
  ansible.builtin.command:
    cmd: service netif cloneup

- name: Configure pf
  ansible.builtin.template:
    src: etc/pf.conf.j2
    dest: /etc/pf.conf
  notify: restart pf

- name: Enable pf
  community.general.sysrc:
    name: pf_enable
    value: "YES"

- name: Start pf
  ansible.builtin.service:
    name: pf
    state: started
  register: packet_filter_started

- name: Wait and reconnect after packet filter started
  ansible.builtin.wait_for_connection:
    delay: 1
    connect_timeout: 1
  when: packet_filter_started.changed

- name: Bootstrap releases
  ansible.builtin.command:
    cmd: "bastille bootstrap {{ item }} update"
    creates: "{{ bastille_prefix }}/releases/{{ item }}/COPYRIGHT"
  loop: "{{ bastille_releases }}"

- name: Bootstrap templates
  ansible.builtin.command:
    cmd: "bastille bootstrap {{ item }}"
  loop: "{{ bastille_templates }}"
  when: bastille_templates is defined

- name: Create jails
  ansible.builtin.command:
    cmd: bastille create {{ item.options | default('') }} {{ item.name }} {{ item.release }} {{ item.ip }} bastille0
    creates: "{{ bastille_prefix }}/jails/{{ item.name }}/root/COPYRIGHT"
  loop: "{{ bastille_jails }}"
  when: bastille_jails is defined

- name: Apply templates
  ansible.builtin.command:
    cmd: "bastille template {{ item.0.name }} {{ item.1 }}"
  with_subelements:
    - "{{ bastille_jails }}"
    - templates
    - skip_missing: yes
