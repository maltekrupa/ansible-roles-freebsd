---
- name: Install
  community.general.pkgng:
    name: nginx
    state: present

- name: Create nginx directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: wheel
    mode: "0644"
  loop:
    - "{{ nginx_configuration_directory }}/sites-available"
    - "{{ nginx_configuration_directory }}/sites-enabled"

- name: Create site directories
  ansible.builtin.file:
    path: /usr/local/www/{{ item }}
    state: directory
    owner: www
    group: www
    mode: "0770"
  loop: "{{ nginx_vhosts.keys() }}"

- name: Configure nginx.conf
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: "{{ nginx_configuration_directory }}/nginx.conf"
    owner: root
    group: wheel
    mode: "0644"
  notify: Reload nginx

- name: Create vhosts
  ansible.builtin.template:
    src: vhost.j2
    dest: "{{ nginx_configuration_directory }}/sites-available/{{ item }}.conf"
    owner: root
    group: wheel
    mode: "0644"
  loop: "{{ nginx_vhosts.keys() }}"

- name: Find all enabled sites
  ansible.builtin.find:
    paths: "{{ nginx_configuration_directory }}/sites-enabled"
    patterns: "*.conf"
    file_type: any
  register: nginx_enabled_sites

- name: Remove all enabled sites
  ansible.builtin.file:
    state: absent
    path: "{{ item }}"
  loop: "{{ nginx_enabled_sites.files | map(attribute='path') }}"

- name: Create links for sites-available
  ansible.builtin.file:
    state: link
    src: "{{ nginx_configuration_directory }}/sites-available/{{ item }}.conf"
    dest: "{{ nginx_configuration_directory }}/sites-enabled/{{ item }}.conf"
    owner: root
    group: wheel
    mode: "0644"
  loop: "{{ nginx_vhosts.keys() }}"
  notify:
    - Reload nginx

- name: Create newsyslog configuration
  ansible.builtin.template:
    src: newsyslog
    dest: /usr/local/etc/newsyslog.conf.d/nginx.conf
    mode: "0644"

- name: Enable nginx
  community.general.sysrc:
    name: nginx_enable
    value: "YES"

- name: Start nginx
  ansible.builtin.service:
    name: nginx
    state: started
