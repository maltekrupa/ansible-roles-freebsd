global
{# We have no loopback on jails (yet?), so bind to a RFC1918 address #}
{% if haproxy_in_jail %}
  log {{ network_ipv4_address }}:514 local0
{% else %}
  log 127.0.0.1:514 local0
{% endif %}
  chroot /var/empty
  user www
  group www
  stats socket /var/run/haproxy.stat mode 600 level admin expose-fd listeners
  stats timeout 30s
  daemon

  # modern configuration
  # as per: https://ssl-config.mozilla.org/#server=haproxy&version=2.4&config=modern&openssl=1.1.1k&guideline=5.6
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tlsv12 no-tls-tickets

  ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tlsv12 no-tls-tickets
{% for global_var in haproxy_global_vars %}
  {{ global_var }}
{% endfor %}

defaults
  log global
  mode  http
  option  httplog
  option  dontlognull
  timeout connect {{ haproxy_connect_timeout }}
  timeout client {{ haproxy_client_timeout }}
  timeout server {{ haproxy_server_timeout }}
  errorfile 400 /usr/local/share/examples/haproxy/errorfiles/400.http
  errorfile 403 /usr/local/share/examples/haproxy/errorfiles/403.http
  errorfile 408 /usr/local/share/examples/haproxy/errorfiles/408.http
  errorfile 500 /usr/local/share/examples/haproxy/errorfiles/500.http
  errorfile 502 /usr/local/share/examples/haproxy/errorfiles/502.http
  errorfile 503 /usr/local/share/examples/haproxy/errorfiles/503.http
  errorfile 504 /usr/local/share/examples/haproxy/errorfiles/504.http

  compression algo gzip
  compression type text/html text/plain text/css text/javascript


frontend stats
    bind localhost:8404
    stats enable
    stats uri /
    stats refresh 10s
    stats admin if LOCALHOST

frontend incoming
    bind     :::{{ haproxy_listen_port_http }} v4v6
{% if haproxy_tls_enabled %}
    bind     :::{{ haproxy_listen_port_https }} v4v6 ssl crt {{ haproxy_cert_dir }} alpn h2,http/1.1
    redirect scheme https code 301 if !{ ssl_fc }
    http-response set-header Strict-Transport-Security max-age=63072000
{% endif %}
    http-response del-header server
    default_backend no-match

{% for item in haproxy_redirects %}
    http-request redirect code {{ item.code }} location {{ item.target }} if { hdr_dom(host) -i {{ item.source }} }
{% endfor %}

{% for item in haproxy_servers %}
    acl acl_{{ item.fqdn }} hdr(host) -i {{ item.fqdn }}
    use_backend be_{{ item.name }} if acl_{{ item.fqdn }}
{% endfor %}

backend no-match
    http-request deny deny_status 404

{% for item in haproxy_servers %}
backend be_{{ item.name }}
{% if item.mode is defined and item.mode %}
    mode '{{ item.mode }}'
{% else %}
    mode 'http'
{% endif %}
{% if item.balance is defined and item.balance %}
    balance {{ item.balance }}
{% else %}
    balance 'roundrobin'
{% endif %}
    option forwardfor
{% if item.healthcheck is defined and item.healthcheck %}
    {{ item.healthcheck | indent(width=4) -}}
{% endif %}
{% for srv in item.address %}
    server {{ item.name }}-{{ loop.index }} {{ srv }} check
{% endfor %}
{% endfor %}
